{"version":3,"sources":["app/actions/apis/index.js","app/components/Navbar.js","app/components/Table.js","app/components/Header.js","app/components/Pagination.js","app/components/Loader.js","app/pages/Home.js","app/actions/index.js","app/actions/types.js","app/pages/User.js","app/routers/index.js","app/store/models/Home.js","app/store/reducers/Home.js","app/store/index.js","app/index.js","index.js"],"names":["fetchUsersApi","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","actionType","wrap","_context","prev","next","fetch","method","then","response","json","type","payload","catch","error","console","log","stop","_x","_x2","apply","this","arguments","Navbar","react_default","createElement","react","className","style","marginTop","role","Table","usersList","query","viewUser","entitiesPerPage","_useState","useState","toConsumableArray","_useState2","slicedToArray","listToRender","setListToRender","_useState3","_useState4","sortedBy","setSortedBy","useEffect","length","newList","filter","user","first_name","toLowerCase","indexOf","renderTableHead","name","sortBy","undefined","onClick","sort","obj1","obj2","age","firstValue","secondValue","sortList","marginLeft","map","index","key","last_name","company_name","Header","onSearch","_ref$searchVisible","searchVisible","onChange","event","target","value","placeholder","aria-label","Pagination","totalPages","pageIndex","onClickPage","onClickPrevNext","paginationIndexArr","start","end","arr","i","push","fillArr","Math","sign","item","Loader","display","justifyContent","alignItems","height","width","background","getCurrentPageData","nextProps","allUsers","currentPageData","ceil","endPoint","beginPoint","slice","Home","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetchUsers","shouldComponentUpdate","nextState","state","setState","objectSpread","buttonType","prevState","history","pathname","data","render","_this$state","loading","components_Loader","components_Header","components_Navbar","components_Table","components_Pagination","Component","withRouter","connect","home","User","location","window","city","id","web","zip","Routers","react_router_dom","react_router","exact","path","component","INITIAL_STATE","HomeReducer","action","Reducers","combineReducers","createStore","applyMiddleware","ReduxThunk","App","es","store","routers","ReactDOM","app","document","getElementById"],"mappings":"wQACaA,EAAa,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAUC,GAAjB,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,wCACbC,MADa,wCACC,CACVC,OAAQ,QAEXC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJT,EAAS,CACPW,KAAMV,EACNW,QAASH,MAEVI,MAAM,SAAAC,GACPC,QAAQC,IAAIF,KAZa,wBAAAX,EAAAc,SAAAlB,MAAH,gBAAAmB,EAAAC,GAAA,OAAA1B,EAAA2B,MAAAC,KAAAC,YAAA,GCmBXC,EAjBA,WACb,OACEC,EAAA3B,EAAA4B,cAACC,EAAA,SAAD,KACEF,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,kBAAkBC,MAAO,CAACC,UAAW,SAClDL,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,OACbH,EAAA3B,EAAA4B,cAAA,QAAMK,KAAK,OAAOH,UAAU,wBAC1BH,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,2GACbH,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,MAAd,cAEFH,EAAA3B,EAAA4B,cAAA,4CC8EGM,EAxFD,SAAAtC,GAAqD,IAAlDuC,EAAkDvC,EAAlDuC,UAAWC,EAAuCxC,EAAvCwC,MAAOC,EAAgCzC,EAAhCyC,SAAUC,EAAsB1C,EAAtB0C,gBAAsBC,EAGzBC,mBAAS3C,OAAA4C,EAAA,EAAA5C,CAAIsC,IAHYO,EAAA7C,OAAA8C,EAAA,EAAA9C,CAAA0C,EAAA,GAG1DK,EAH0DF,EAAA,GAG5CG,EAH4CH,EAAA,GAAAI,EAIjCN,mBAAS,IAJwBO,EAAAlD,OAAA8C,EAAA,EAAA9C,CAAAiD,EAAA,GAI1DE,EAJ0DD,EAAA,GAIhDE,EAJgDF,EAAA,GAOjEG,oBAAU,WACR,GAAc,KAAVd,GAAgBQ,EAAaO,OAASb,EAAiB,CACzD,IAAIc,EAAUjB,EAAUkB,OAAO,SAAAC,GAC7B,OAAQA,EAAKC,WAAWC,cAAeC,QAAQrB,EAAMoB,gBAAkB,IAEzEX,EAAgBhD,OAAA4C,EAAA,EAAA5C,CAAIuD,MAErB,CAAChB,EAAOD,IAGX,IAqBMuB,EAAkB,SAACC,GAAD,IAAOC,EAAPnC,UAAA0B,OAAA,QAAAU,IAAApC,UAAA,GAAAA,UAAA,GAAgB,GAAhB,OACtBE,EAAA3B,EAAA4B,cAACC,EAAA,SAAD,KACEF,EAAA3B,EAAA4B,cAAA,UAAK+B,EAEU,KAAXC,EACEA,IAAWZ,EACTrB,EAAA3B,EAAA4B,cAAA,UAAQE,UAAU,iCAAiCgC,QAAS,kBA3BvD,SAAAF,GACf,IAAIR,EAAU,GAEZA,EADa,QAAXQ,EACQhB,EAAamB,KAAK,SAACC,EAAMC,GACjC,OAAOD,EAAKE,IAAMD,EAAKC,MAGftB,EAAamB,KAAK,SAACC,EAAMC,GACjC,IAAIE,EAAWH,EAAKJ,GAAQJ,cAAeY,EAAYH,EAAKL,GAAQJ,cACpE,OAAIW,EAAaC,GACP,EACND,EAAaC,EACR,EACF,IAGXvB,EAAgBhD,OAAA4C,EAAA,EAAA5C,CAAIuD,IACpBH,EAAYW,GAUgES,CAAST,KAA3E,QAEAjC,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,iCAAiCC,MAAO,CAACuC,WAAW,KAApE,UAEF,QAKV,OACE3C,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,oBAEXc,EAAaO,OACXxB,EAAA3B,EAAA4B,cAAA,SAAOE,UAAU,gCACfH,EAAA3B,EAAA4B,cAAA,aACED,EAAA3B,EAAA4B,cAAA,UACG8B,EAAgB,SAChBA,EAAgB,aAAc,cAC9BA,EAAgB,YAAa,aAC7BA,EAAgB,MAAO,OACvBA,EAAgB,eAAgB,kBAGrC/B,EAAA3B,EAAA4B,cAAA,aAEIgB,EAAa2B,IAAI,SAACjB,EAAMkB,GAAP,OACf7C,EAAA3B,EAAA4B,cAAA,MAAI6C,IAAKD,EAAOV,QAAS,kBAAMzB,EAASiB,KACtC3B,EAAA3B,EAAA4B,cAAA,YAAO4C,GACP7C,EAAA3B,EAAA4B,cAAA,UAAK0B,EAAKC,YACV5B,EAAA3B,EAAA4B,cAAA,UAAK0B,EAAKoB,WACV/C,EAAA3B,EAAA4B,cAAA,UAAK0B,EAAKY,KACVvC,EAAA3B,EAAA4B,cAAA,UAAK0B,EAAKqB,mBAOpBhD,EAAA3B,EAAA4B,cAAA,iCC/DKgD,EAlBA,SAAAhF,GAAwC,IAArCiF,EAAqCjF,EAArCiF,SAAqCC,EAAAlF,EAA3BmF,qBAA2B,IAAAD,KACrD,OACEnD,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,kEACbH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,uCAAhB,gBAEEiD,GACEpD,EAAA3B,EAAA4B,cAAA,SACEE,UAAU,uCACVkD,SAAU,SAAAC,GAAK,OAAIJ,EAASI,EAAMC,OAAOC,QACzCrE,KAAK,OACLsE,YAAY,iBACZC,aAAW,aC8DRC,EAxEI,SAAA1F,GAA6D,IAA1D2F,EAA0D3F,EAA1D2F,WAAYC,EAA8C5F,EAA9C4F,UAAWC,EAAmC7F,EAAnC6F,YAAaC,EAAsB9F,EAAtB8F,gBAcpDC,EARY,SAACC,EAAOC,GAEtB,IADA,IAAIC,EAAI,GACAC,EAAIH,EAAOG,GAAKF,EAAKE,IAC3BD,EAAIE,KAAKD,GAEX,OAAOD,EAGgBG,EAZuB,IAA/BC,KAAKC,KAAKX,EAAY,IAAa,EAAIA,EAAY,GACrDA,EAAY,GAAKD,EAAaA,EAAaC,EAAY,IA6CtE,OACE7D,EAAA3B,EAAA4B,cAAA,WACED,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,cAhChBH,EAAA3B,EAAA4B,cAACC,EAAA,SAAD,KAEkB,IAAd2D,EACE7D,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,sBACZH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,aAGFH,EAAA3B,EAAA4B,cAAA,MAAIkC,QAAS,kBAAM4B,EAAgB,SAAS5D,UAAU,aACpDH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,cA2BF6D,EAAmBpB,IAAI,SAAA6B,GACrB,OACEzE,EAAA3B,EAAA4B,cAAA,MACE6C,IAAK2B,EACLtE,UAAW0D,IAAcY,EAAO,mBAAqB,YACrDtC,QAAS,kBAAM2B,EAAYW,KACzBzE,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aACbsE,MA1BjBzE,EAAA3B,EAAA4B,cAACC,EAAA,SAAD,KAEI2D,IAAcD,EACZ5D,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,sBACZH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,SAGFH,EAAA3B,EAAA4B,cAAA,MAAIkC,QAAS,kBAAM4B,EAAgB,SAAS5D,UAAU,aACpDH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,aCnCGuE,EARA,kBACb1E,EAAA3B,EAAA4B,cAAA,OAAKG,MAAO,CAACuE,QAAQ,OAAQC,eAAe,SAAUC,WAAW,SAAUC,OAAO,QAASC,MAAM,QAASC,WAAW,YACjHhF,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,yBAAyBG,KAAK,SAASF,MAAO,CAAC2E,MAAO,OAAQD,OAAQ,SACnF9E,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,WAAhB,iBCCF8E,EAAqB,SAACC,GAAc,IAClCrB,EAAsEqB,EAAtErB,UAAWlD,EAA2DuE,EAA3DvE,gBAAiBwE,EAA0CD,EAA1CC,SAAUvB,EAAgCsB,EAAhCtB,WAAYwB,EAAoBF,EAApBE,gBACrC,IAAfxB,IACFA,EAAaW,KAAKc,KAAKF,EAAS3D,OAASb,IAE3C,IAAI2E,EAAWzB,EAAUlD,EACrB4E,EAAaD,EAAW3E,EAE5B,OADAyE,EAAkBD,EAASK,MAAMD,EAAYD,GACtC,CAAEzB,YAAWlD,kBAAiBwE,WAAUvB,aAAYwB,oBAGvDK,cACJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAzH,OAAA0H,EAAA,EAAA1H,CAAA2B,KAAA4F,IAChBE,EAAAzH,OAAA2H,EAAA,EAAA3H,CAAA2B,KAAA3B,OAAA4H,EAAA,EAAA5H,CAAAuH,GAAAM,KAAAlG,KAAM6F,KAiBRM,kBAAoB,kBAAML,EAAKD,MAAMO,cAlBnBN,EAqBlBO,sBAAwB,SAAChB,EAAWiB,GAClC,OAAIA,IAAcR,EAAKS,OAtBPT,EA6BlBzC,SAAW,SAAAzC,GAAK,OAAIkF,EAAKU,SAAS,CAAC5F,WA7BjBkF,EAgClB7B,YAAc,SAACD,GACb8B,EAAKU,SAAS,CACZxC,aACA,kBAAM8B,EAAKU,SAALnI,OAAAoI,EAAA,EAAApI,CAAA,GACD+G,EAAmBU,EAAKS,YApCfT,EAyClB5B,gBAAkB,SAAAwC,GACG,SAAfA,EACFZ,EAAKU,SAAS,SAAAG,KACCA,EAAU3C,WACvB,kBAAM8B,EAAKU,SAALnI,OAAAoI,EAAA,EAAApI,CAAA,GACH+G,EAAmBU,EAAKS,WAG7BT,EAAKU,SAAS,SAAAG,KACCA,EAAU3C,WACvB,kBAAM8B,EAAKU,SAALnI,OAAAoI,EAAA,EAAApI,CAAA,GACH+G,EAAmBU,EAAKS,YApDfT,EA0DlBjF,SAAW,SAAAiB,GACTgE,EAAKD,MAAMe,QAAQpC,KAAK,CACtBqC,SAAU,QACVC,KAAM,CAAChF,WA7DOgE,EAiElBiB,OAAS,WAAM,IAAAC,EACqElB,EAAKS,MAAjFhB,EADOyB,EACPzB,gBAAiBxB,EADViD,EACUjD,WAAYC,EADtBgD,EACsBhD,UAAWiD,EADjCD,EACiCC,QAASnG,EAD1CkG,EAC0ClG,gBAAiBF,EAD3DoG,EAC2DpG,MACxE,OAAIqG,EACK9G,EAAA3B,EAAA4B,cAAC8G,EAAD,MAGP/G,EAAA3B,EAAA4B,cAACC,EAAA,SAAD,KACEF,EAAA3B,EAAA4B,cAAC+G,EAAD,CAAQ9D,SAAUyC,EAAKzC,WACvBlD,EAAA3B,EAAA4B,cAACgH,EAAD,MACAjH,EAAA3B,EAAA4B,cAAA,QAAMK,KAAK,OAAOH,UAAU,wBAExBiF,GACEpF,EAAA3B,EAAA4B,cAACiH,EAAD,CAAO1G,UAAW4E,EAAiB3E,MAAOA,EAAOC,SAAUiF,EAAKjF,SAAUC,gBAAiBA,IAE/FX,EAAA3B,EAAA4B,cAACkH,EAAD,CACEvD,WAAYA,EACZC,UAAWA,EACXC,YAAa6B,EAAK7B,YAClBC,gBAAiB4B,EAAK5B,qBAhF9B4B,EAAKS,MAAQ,GAHGT,6FAOcT,EAAWsB,GACzC,OAAItB,EAAUC,WAAaqB,EAAUrB,SAC5BjH,OAAAoI,EAAA,EAAApI,CAAA,CACL4I,QAAS5B,EAAU4B,QACnBrG,MAAOyE,EAAUzE,OACdwE,EAAmBC,IAGnB,YAhBQkC,aA8FJC,cAAWC,YAFF,SAAArJ,GAAA,IAAEsJ,EAAFtJ,EAAEsJ,KAAF,OAAArJ,OAAAoI,EAAA,EAAApI,CAAA,GAAkBqJ,IAEQ,CAChDtB,WC7GwB,WACxB,OAAO,SAACzH,GACNR,EAAcQ,ECNS,kBFgHD8I,CAEvB7B,IG5DY+B,EAnDF,SAAA9B,GAEV,IAAI/D,EAAO+D,EAAM+B,SAASd,KAAOjB,EAAM+B,SAASd,KAAKhF,KAAO,GAC/C,KAATA,IACF+F,OAAOD,SAAW,KAJD,IAOblF,EAAiEZ,EAAjEY,IAAKoF,EAA4DhG,EAA5DgG,KAAM3E,EAAsDrB,EAAtDqB,aAAcpB,EAAwCD,EAAxCC,WAAYgG,EAA4BjG,EAA5BiG,GAAI7E,EAAwBpB,EAAxBoB,UAAW8E,EAAalG,EAAbkG,IAAKC,EAAQnG,EAARmG,IAChE,OACE9H,EAAA3B,EAAA4B,cAACC,EAAA,SAAD,KACEF,EAAA3B,EAAA4B,cAAC+G,EAAD,CAAQ5D,eAAe,IACvBpD,EAAA3B,EAAA4B,cAAA,QAAMK,KAAK,OAAOF,MAAO,CAACC,UAAU,QAASF,UAAU,wBACrDH,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,cACZH,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,MAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkCoC,IAEpDvC,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,OAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkCwH,IAEpD3H,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,eAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkC6C,IAEpDhD,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,aAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkCyB,IAEpD5B,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,KAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkCyH,IAEpD5H,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,YAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkC4C,IAEpD/C,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,MAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkC0H,IAEpD7H,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,qEAAd,MAEEH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,kCAAkC2H,QC5B/CC,EAZC,WACd,OACE/H,EAAA3B,EAAA4B,cAAC+H,EAAA,EAAD,KACEhI,EAAA3B,EAAA4B,cAACgI,EAAA,EAAD,KACEjI,EAAA3B,EAAA4B,cAACgI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY3C,IAClCzF,EAAA3B,EAAA4B,cAACgI,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAY3C,IAChCzF,EAAA3B,EAAA4B,cAACgI,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAYZ,sBCHzBa,EATO,CACpBlD,SAAU,GACV2B,SAAS,EACTnG,gBAAiB,EACjBkD,UAAW,EACXD,WAAY,EACZnD,MAAO,ICMM6H,EATK,WAAmC,IAAlClC,EAAkCtG,UAAA0B,OAAA,QAAAU,IAAApC,UAAA,GAAAA,UAAA,GAA1BuI,EAAeE,EAAWzI,UAAA0B,OAAA,EAAA1B,UAAA,QAAAoC,EACrD,OAAQqG,EAAOpJ,MACb,IJLuB,cIMrB,OAAOjB,OAAAoI,EAAA,EAAApI,CAAA,GAAKkI,EAAZ,CAAmBjB,SAASjH,OAAA4C,EAAA,EAAA5C,CAAMqK,EAAOnJ,SAAW0H,SAAS,IAC/D,QACE,OAAOV,ICJPoC,EAAYC,YAAgB,CAChClB,KAAMe,IAIOI,cACbF,EACA,GACAG,YAAgBC,MCEHC,EARH,WACV,OACE7I,EAAA3B,EAAA4B,cAAC6I,EAAA,EAAD,CAAUC,MAASA,GAAnB,KACE/I,EAAA3B,EAAA4B,cAAC+I,EAAD,QCJNC,IAASrC,OACP5G,EAAA3B,EAAA4B,cAACiJ,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.3dcd82e2.chunk.js","sourcesContent":["\nexport const fetchUsersApi = async (dispatch, actionType) => {\n  let apiUrl = \"https://demo9197058.mockable.io/users\";\n  fetch(apiUrl, {\n      method: \"GET\"\n   })\n  .then(response => response.json())\n  .then(response => {\n    dispatch({\n      type: actionType,\n      payload: response\n    })\n  }).catch(error => {\n    console.log(error);\n  })\n}","import React, { Fragment } from \"react\";\n\n// Navbar for displaying content info of screen\nconst Navbar = () => {\n  return(\n    <Fragment>\n      <div className=\"container-fluid\" style={{marginTop: '30px'}}>\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-md-9 offset-md-1\">\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n              <h1 className=\"h2\">Dashboard</h1>\n            </div>\n            <h2>All Users</h2>\n          </main>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Navbar;","import React, { useState, useEffect, Fragment } from \"react\";\n\nconst Table = ({ usersList, query, viewUser, entitiesPerPage }) => {\n\n  // Settting up the initial state of component\n  const [listToRender, setListToRender] = useState([...usersList]); \n  const [sortedBy, setSortedBy] = useState(\"\");\n\n  // Run if usersList or query changes\n  useEffect(() => {\n    if (query !== \"\" || listToRender.length < entitiesPerPage) {\n      let newList = usersList.filter(user => {\n        return (user.first_name.toLowerCase()).indexOf(query.toLowerCase()) > -1\n      });\n      setListToRender([...newList]);\n    }\n  }, [query, usersList]);\n\n  // Acccepts string value to sort the userList\n  const sortList = sortBy => { \n    let newList = [];\n    if (sortBy === \"age\") {\n      newList = listToRender.sort((obj1, obj2) => {\n        return obj1.age - obj2.age\n      });\n    } else{\n      newList = listToRender.sort((obj1, obj2) => {\n        let firstValue=obj1[sortBy].toLowerCase(), secondValue=obj2[sortBy].toLowerCase()\n        if (firstValue < secondValue) \n          return -1 \n        if (firstValue > secondValue)\n          return 1\n        return 0 \n      })\n    }\n    setListToRender([...newList]);\n    setSortedBy(sortBy);\n  }\n\n  // Return JSX to display Table Head\n  const renderTableHead = (name, sortBy = \"\") => (\n    <Fragment>\n      <th>{name}\n        {  \n          sortBy !== \"\" ?\n            sortBy !== sortedBy ? \n              <button className=\"badge badge-primary badge-pill\" onClick={() => sortList(sortBy)}>sort</button>\n            :  \n              <span className=\"badge badge-primary badge-pill\" style={{marginLeft:10}}>Sorted</span>  \n          :\n            null\n        }\n      </th>\n    </Fragment>\n  )\n  return(\n    <div className=\"table-responsive\">\n      {\n        listToRender.length ? \n          <table className=\"table table-striped table-sm\">\n            <thead>\n              <tr>\n                {renderTableHead(\"index\")}\n                {renderTableHead(\"First Name\", \"first_name\")}\n                {renderTableHead(\"last Name\", \"last_name\")}\n                {renderTableHead(\"Age\", \"age\")}\n                {renderTableHead(\"Company Name\", \"company_name\")}\n              </tr>\n            </thead>\n            <tbody>\n              {\n                listToRender.map((user, index) => (\n                  <tr key={index} onClick={() => viewUser(user)} >\n                    <td>{++index}</td>\n                    <td>{user.first_name}</td>\n                    <td>{user.last_name}</td>\n                    <td>{user.age}</td>\n                    <td>{user.company_name}</td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>      \n        :\n          <h2>No Search Results</h2>\n      }  \n    </div>\n  )\n} \n\nexport default Table;","import React from \"react\";\n\n// Rendering Search Input field for only Home component on basis of \"searchVisible\" value \nconst Header = ({ onSearch, searchVisible = true }) => {\n  return(\n    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <span className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Company name</span> \n      {\n        searchVisible &&                                     \n          <input \n            className=\"form-control form-control-dark w-100\" \n            onChange={event => onSearch(event.target.value)} \n            type=\"text\" \n            placeholder=\"Search By Name\" \n            aria-label=\"Search\" \n          />\n      }\n    </nav>\n  )\n}\n\nexport default Header;","import React, { Fragment } from \"react\";\n\n\n\nconst Pagination = ({ totalPages, pageIndex, onClickPage, onClickPrevNext }) => {\n\n  let startPoint = Math.sign(pageIndex - 10) === -1 ? 1 : pageIndex - 10; // Decide pagination start index\n  let endPoint = pageIndex + 10 > totalPages ? totalPages : pageIndex + 10;  // Decide pagination end index\n\n  // Creating array to display pagination indexing on basis of current page index\n  const fillArr = (start, end) =>{\n    let arr=[];\n    for(let i = start; i <= end; i++){\n      arr.push(i);    \n    }\n    return arr;\n  }\n\n  let paginationIndexArr = fillArr(startPoint, endPoint);\n\n  // Render Previous button\n  const renderPrevButton = () => (\n    <Fragment>\n      {\n        pageIndex === 1 ?\n          <li className=\"page-item disabled\">\n            <span className=\"page-link\">Previous</span>\n          </li>\n        :\n          <li onClick={() => onClickPrevNext(\"prev\")} className=\"page-item\">\n            <span className=\"page-link\">Previous</span>\n          </li>  \n      }      \n    </Fragment>      \n  )\n\n  // Render Next button\n  const renderNextButton = () => (\n    <Fragment>\n      {\n        pageIndex === totalPages ?\n          <li className=\"page-item disabled\">\n            <span className=\"page-link\">Next</span>\n          </li>\n        :\n          <li onClick={() => onClickPrevNext(\"next\")} className=\"page-item\">\n            <span className=\"page-link\">Next</span>\n          </li>  \n      }      \n    </Fragment>      \n  )\n\n  return(\n    <nav>\n      <ul className=\"pagination\">\n        {renderPrevButton()}\n        {\n          paginationIndexArr.map(item => {\n            return(\n              <li \n                key={item} \n                className={pageIndex === item ? \"page-item active\" : \"page-item\"}\n                onClick={() => onClickPage(item)}>\n                  <span className=\"page-link\">\n                    {item}\n                  </span>\n              </li>\n            )\n          })\n        }\n        {renderNextButton()}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination;","import React from \"react\";\n\n// Full Screen Loader\nconst Loader = () => (\n  <div style={{display:'flex', justifyContent:'center', alignItems:'center', height:'100vh', width:'100vw', background:'#f7f7fa'}}>\n      <div className=\"spinner-grow text-dark\" role=\"status\" style={{width: \"7rem\", height: \"7rem\"}}>\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n   </div>\n);\n\nexport default Loader;","import React, { Component, Fragment } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../actions\";\nimport { Navbar, Table, Header, Pagination, Loader } from \"../components\";\n\n// Return all the data corresponding to current page\nconst getCurrentPageData = (nextProps) => {\n  let { pageIndex, entitiesPerPage, allUsers, totalPages, currentPageData } = nextProps;\n  if (totalPages === 0){\n    totalPages = Math.ceil(allUsers.length / entitiesPerPage);\n  }\n  let endPoint = pageIndex*entitiesPerPage;\n  let beginPoint = endPoint - entitiesPerPage;\n  currentPageData = allUsers.slice(beginPoint, endPoint);\n  return { pageIndex, entitiesPerPage, allUsers, totalPages, currentPageData };\n} \n\nclass Home extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {}; // Initializing empty component state\n  }\n\n  // Set the default and changing component state\n  static getDerivedStateFromProps(nextProps, prevState){\n    if (nextProps.allUsers !== prevState.allUsers) {\n      return {\n        loading: nextProps.loading,\n        query: nextProps.query,\n        ...getCurrentPageData(nextProps)\n      };\n    }\n    return null;\n  }   \n\n  componentDidMount = () => this.props.fetchUsers();\n\n  // Decide wether to re-render the component or not on basis of state changes\n  shouldComponentUpdate = (nextProps, nextState) => {   \n    if (nextState !== this.state) {\n      return true;\n    } \n    return false;\n  }\n\n  // Updete query state on input change\n  onSearch = query => this.setState({query});\n\n  // Invokes on changing the page and set new data for current page\n  onClickPage = (pageIndex) => {\n    this.setState({\n      pageIndex\n    },() => this.setState({\n        ...getCurrentPageData(this.state)\n      }))\n  }\n\n  // Invokes when previous or next button is clicked\n  onClickPrevNext = buttonType => {\n    if (buttonType === \"next\") {\n      this.setState(prevState => {\n        pageIndex: ++prevState.pageIndex\n      },() => this.setState({\n        ...getCurrentPageData(this.state)\n      }));\n    } else{\n      this.setState(prevState => {\n        pageIndex: --prevState.pageIndex\n      },() => this.setState({\n        ...getCurrentPageData(this.state)\n      }));\n    }\n  }\n\n  // Invokes when user is clicked from the list and send data to user page\n  viewUser = user => {\n    this.props.history.push({\n      pathname: \"/user\",\n      data: {user}\n    })\n  }\n  \n  render = () => {\n    let { currentPageData, totalPages, pageIndex, loading, entitiesPerPage, query } = this.state;\n    if (loading) {\n      return <Loader />\n    }\n    return(\n      <Fragment>\n        <Header onSearch={this.onSearch} />\n        <Navbar />\n        <main role=\"main\" className=\"col-md-9 offset-md-1\">\n          {\n            currentPageData &&\n              <Table usersList={currentPageData} query={query} viewUser={this.viewUser} entitiesPerPage={entitiesPerPage} />\n          }\n          <Pagination \n            totalPages={totalPages} \n            pageIndex={pageIndex} \n            onClickPage={this.onClickPage} \n            onClickPrevNext={this.onClickPrevNext} \n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({home}) => ({ ...home })\n\nexport default withRouter(connect(mapStateToProps,{\n  fetchUsers\n})(Home));","import { fetchUsersApi } from \"./apis\";\nimport { FETCH_USERS } from \"./types\";\n\n\nexport const fetchUsers = () => {\n  return (dispatch) => {\n    fetchUsersApi(dispatch, FETCH_USERS);\n  }\n}\n","export const FETCH_USERS = \"FETCH_USERS\";","import React, { Fragment } from \"react\";\nimport { Header } from \"../components\";\n\nconst User = props => {\n\n   let user = props.location.data ? props.location.data.user : \"\";\n   if (user === \"\") { // Switch to home route if the user data is not available\n     window.location = \"/\";\n   }\n   \n   let { age, city, company_name, first_name, id, last_name, web, zip } = user;\n  return(\n    <Fragment>\n      <Header searchVisible={false} />\n      <main role=\"main\" style={{marginTop:\"50px\"}} className=\"col-md-9 offset-md-1\">\n        <ul className=\"list-group\">\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            age\n            <span className=\"badge badge-primary badge-pill\">{age}</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            city\n            <span className=\"badge badge-primary badge-pill\">{city}</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            company name\n            <span className=\"badge badge-primary badge-pill\">{company_name}</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            first name\n            <span className=\"badge badge-primary badge-pill\">{first_name}</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            id\n            <span className=\"badge badge-primary badge-pill\">{id}</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            last name\n            <span className=\"badge badge-primary badge-pill\">{last_name}</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            web\n            <span className=\"badge badge-primary badge-pill\">{web}</span>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            zip\n            <span className=\"badge badge-primary badge-pill\">{zip}</span>\n          </li>\n        </ul>\n      </main>  \n    </Fragment>\n  )\n}\n\nexport default User;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"../pages/Home\";\nimport User from \"../pages/User\";\n\nconst Routers = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route path=\"/home\" component={ Home } />\n        <Route path=\"/user\" component={ User } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routers;\n","const INITIAL_STATE = {\n  allUsers: [],\n  loading: true,\n  entitiesPerPage: 5,\n  pageIndex: 1,\n  totalPages: 0,\n  query: \"\"\n}\n\nexport default INITIAL_STATE;","import INITIAL_STATE from \"../models/Home\";\nimport { FETCH_USERS } from \"../../actions/types\"\n\nconst HomeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USERS:\n      return { ...state, allUsers: [ ...action.payload ], loading: false };\n    default:\n      return state;\n  }\n}\n\nexport default HomeReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport HomeReducer from \"./reducers/Home\";\n\nconst Reducers =  combineReducers({\n  home: HomeReducer\n})\n\n// Creating and exporting the global store of app\nexport default createStore( \n  Reducers, \n  {}, \n  applyMiddleware(ReduxThunk)\n);\n\n","import React from \"react\";\nimport { Provider } from 'react-redux';\nimport Routers from \"./routers\";\nimport store from \"./store\";\n\n// Root Component for the applictaion\nconst App = () => {\n  return (\n    <Provider store = {store} >  {/* providing the global store of the application */}\n      <Routers /> \n    </Provider>  \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\n\nReactDOM.render(\n  <App />, \n  document.getElementById(\"react-app-root\")\n);"],"sourceRoot":""}